#
# STACK CREATION
#
# required function:  stack_ds_<STACKNAME>_fn_create
#
# Variables known:
#
# $DS_SRCPATH
# $STACKDIR
# $STACKNAME
# $HOSTNAMES
#
# location  "$DS_SRCPATH/stacks/$STACKNAME/fn_create"
#


source $DS_SRCPATH/inc/fn_compose

source $DS_SRCPATH/stacks/$STACKNAME/fn_compose



stack_ds_mariadb_fn_create_env(){

  info "Creating .ENV file."

  # APPLICATION SPECIFIC
  DB_ROOT_PASSWORD=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo;)
  echo "DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD">$STACKDIR/.env
  echo "DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD"


  # DATABASE RELATED
  echo "DB_SERVER=none">>$STACKDIR/.env




  # DOCKSERVE INFO
  #echo "DOCKSERVE_STACK=ds_mariadb">>$STACKDIR/.env

  #echo "DOCKSERVE_BACKUP_FOLDER=/var/www/html">>$STACKDIR/.env
  #echo "DOCKSERVE_BACKUP_EXTFOLDER=/public_html">>$STACKDIR/.env




}


stack_ds_mariadb_fn_define(){

    DOCKSERVE_STACK=ds_mariadb
    DOCKSERVE_BACKUP_FOLDER=false
    DOCKSERVE_DB=false
    echo "stack_${DOCKSERVE_STACK}_fn_define()"
}


stack_ds_mariadb_fn_create(){
    info "stacks/stack_ds_traefik_fn_compose - stack_ds_traefik_fn_create\()"

    # Check if ds-traefik is already installed
    HOSTNAMES=$(hostname)

    echo "DS_SRCPATH=$DS_SRCPATH"
    echo "STACKDIR=$STACKDIR"
    echo "STACKNAME=$STACKNAME"
    echo "HOSTNAMES=$HOSTNAMES"


    echo "PROJECTNAME=$PROJECTNAME"











  if [ ! -d $STACKDIR ]; then
    mkdir $STACKDIR
  fi
  #cd /home/dockserve/.ds_mariadb

  if [ -f $STACKDIR/docker-compose.yml ];then
    error "Cannot create ds-mariadb, compose already exists."
    #exit
  fi

  #exit
  compose_document "$STACKDIR/docker-compose.yml"
  stack_ds_mariadb_compose "$STACKDIR/docker-compose.yml"

  #if [ ! -f $DS_MARIADB_PATH/.env ];then
    stack_ds_mariadb_fn_create_env
  #fi

  docker-compose --env-file "$STACKDIR/.env" -f "$STACKDIR/docker-compose.yml" up -d

  info "ds-mariadb was setup."



}

